import{ao as i,x as l,y as e,aj as s,ak as a,H as t,d$ as n,aE as v,C as r,aD as c,A as d,O as o,P as m,I as u,D as $,K as f,bO as p,bA as b,B as g,E as h,bN as k,L as y,ac as C,s as H,F as _,R as w,bg as G,bf as L,bC as S,b_ as j,e9 as x,bJ as A,az as D,n as O}from"./calfSystem-CT1aM4VG.js"
import{r as P}from"./reliclist-0uW5eX4z.js"
var R=(i,l)=>l("view relic on UFSG"),E=(i,l)=>l("view guild"),F=d("<a> </a>"),I=d('<div class="svelte-19l2imp"> </div> <div class="svelte-19l2imp"><a> </a></div> <div class="svelte-19l2imp"><!></div> <div class="svelte-19l2imp"> </div> <div class="svelte-19l2imp"> </div> <div class="svelte-19l2imp"> </div> <div class="svelte-19l2imp"> </div> <div class="svelte-19l2imp"> </div> <div class="svelte-19l2imp"> </div> <div class="svelte-19l2imp"><!></div>',1),N=d('<div class="content grid svelte-19l2imp"><div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <!></div>'),z=d('<div class="content svelte-19l2imp"> </div>'),B=d(" <br/>",1),J=d('<div class="content svelte-19l2imp"></div>')
function K(i,d){l(d,!0)
let D=e(d,"visible",15,!0),O=s(a([])),K=s(a([])),M=-1,T=""
function U(i){H("Relic List",i)}function V(i){t(K,i.concat(u(K)),!0)}const X=(i,l)=>i?.attributes?.find((i=>l=>l.id===i)(l)),q=(i,l)=>X(i,l)?.value??"",Q=i=>X(i,6),W=(i,l)=>M*(i.time-l.time),Y=(i,l)=>X(i,l)?.value??0,Z=i=>(l,e)=>M*(Y(l,i)-Y(e,i)),ii=(i,l)=>M*j(i.guild?.name??"",l.guild?.name??""),li=(i,l)=>M*j(i.name,l.name),ei=i=>i.location.realm.min_level,si=(i,l)=>M*(ei(i)-ei(l))
function ai(i,l){M=T===i?-1*M:1,t(O,u(O).slice().sort(l),!0),T=i}function ti(i,l){U(i),ai(i,l)}async function ni(i=0,l=100){V([`offset ${i}`])
const e=await P(null,i,l)
if(e?.s)return e.r.remaining_relics?e.r.relics.concat(await ni(i+e.r.relics.length,Math.min(100,e.r.remaining_relics))):e.r.relics}async function vi(){V(["Loading..."])
const i=await ni()
C(i)&&(t(O,i.filter(Q),!0),ai("sort by level",si))}let ri=s(a(Promise.resolve()))
t(ri,vi(),!0)
{const l=i=>{var l=b("Relic List")
f(i,l)}
n(i,{close:function(){U("close"),D(!1)},get visible(){return D()},title:l,children:(i,l)=>{var e=v(),s=r(e)
c(s,(()=>u(ri)),(i=>{var l=J()
h(l,21,(()=>u(K)),k,((i,l)=>{var e=B(),s=r(e)
o((()=>m(s,`${u(l)??""} `))),f(i,e)})),f(i,l)}),(i=>{var l=N(),e=$(l),s=$(e)
p(s,{onclick:()=>{ti("sort by level",si)},children:(i,l)=>{var e=b("Level")
f(i,e)},$$slots:{default:!0}})
var a=g(e,2),t=$(a)
p(t,{onclick:()=>{ti("sort by name",li)},children:(i,l)=>{var e=b("Name")
f(i,e)},$$slots:{default:!0}})
var n=g(a,2),v=$(n)
p(v,{onclick:()=>{ti("sort by guild",ii)},children:(i,l)=>{var e=b("Guild")
f(i,e)},$$slots:{default:!0}})
var c=g(n,2),d=$(c)
p(d,{onclick:()=>{ti("sort by stam gain",Z(6))},children:(i,l)=>{var e=b("Stam Gain")
f(i,e)},$$slots:{default:!0}})
var k=g(c,2),y=$(k)
p(y,{onclick:()=>{ti("sort by attack",Z(0))},children:(i,l)=>{var e=b("Atk")
f(i,e)},$$slots:{default:!0}})
var C=g(k,2),H=$(C)
p(H,{onclick:()=>{ti("sort by damage",Z(4))},children:(i,l)=>{var e=b("Dmg")
f(i,e)},$$slots:{default:!0}})
var j=g(C,2),D=$(j)
p(D,{onclick:()=>{ti("sort by stamina",Z(5))},children:(i,l)=>{var e=b("Stam")
f(i,e)},$$slots:{default:!0}})
var P=g(j,2),z=$(P)
p(z,{onclick:()=>{ti("sort by gold gain",Z(7))},children:(i,l)=>{var e=b("Gold Gain")
f(i,e)},$$slots:{default:!0}})
var B=g(P,2),J=$(B)
p(J,{onclick:()=>{ti("sort by xp gain",Z(8))},children:(i,l)=>{var e=b("XP Gain")
f(i,e)},$$slots:{default:!0}})
var K=g(B,2),M=$(K)
p(M,{onclick:()=>{ti("sort by time",W)},children:(i,l)=>{var e=b("Time")
f(i,e)},$$slots:{default:!0}})
var T=g(K,2)
h(T,17,(()=>u(O)),(i=>i.id),((i,l)=>{var e=I(),s=r(e),a=$(s),t=g(s,2),n=$(t)
n.__click=[R,U]
var v=$(n),c=g(t,2),d=$(c),p=i=>{var e=F()
e.__click=[E,U]
var s=$(e)
o((()=>{w(e,"href",`${S??""}${u(l).guild.id??""}`),m(s,u(l).guild.name)})),f(i,e)}
_(d,(i=>{u(l).guild&&i(p)}))
var h=g(c,2),k=$(h),y=g(h,2),C=$(y),H=g(y,2),j=$(H),D=g(H,2),O=$(D),P=g(D,2),N=$(P),z=g(P,2),B=$(z),J=g(z,2),K=$(J),M=i=>{var e=b()
o((i=>m(e,i)),[()=>function(i){const[l,e,s,a]=x(i)
return`${l}d ${A(e)}h ${A(s)}m ${A(a)}s`}(u(l).time)]),f(i,e)}
_(K,(i=>{u(l).time&&i(M)})),o(((i,e,s,t,r,c)=>{m(a,u(l).location.realm.min_level),w(n,"href",`${G??""}relics${L}view&relic_id=${u(l).id??""}`),m(v,u(l).name),m(k,i),m(C,e),m(j,s),m(O,t),m(N,r),m(B,c)}),[()=>q(u(l),6),()=>q(u(l),0),()=>q(u(l),4),()=>q(u(l),5),()=>q(u(l),7),()=>q(u(l),8)]),f(i,e)})),f(i,l)}),((i,l)=>{var e=z(),s=$(e)
o((()=>m(s,u(l).message))),f(i,e)})),f(i,e)},$$slots:{title:!0,default:!0}})}y()}i(["click"])
const M=a({visible:!0})
let T=0
function U(){D("betaOptIn")&&(T?M.visible=!0:T=O(K,{props:M,target:document.body}))}export{U as default}
//# sourceMappingURL=mountReliclist.svelte-BK0L9r4X.js.map
