import{ap as s,y as e,z as a,ak as i,al as l,J as t,dW as c,aG as n,E as v,aF as r,C as d,Q as o,R as u,K as m,F as g,N as $,bS as f,bE as b,D as h,G as k,bR as y,O as C,ad as H,s as G,H as _,T as p,bb as w,bc as S,bG as L,c1 as R,e7 as F,bN as N,aA as j,t as x}from"./calfSystem-CIdPz3EO.js"
import{r as A}from"./reliclist-z6sKPAvC.js"
var D=(s,e)=>e("view relic on UFSG"),E=(s,e)=>e("view guild"),O=d("<a> </a>"),P=d('<div class="svelte-s68cg2"> </div> <div class="svelte-s68cg2"><a> </a></div> <div class="svelte-s68cg2"><!></div> <div class="svelte-s68cg2"> </div> <div class="svelte-s68cg2"> </div> <div class="svelte-s68cg2"> </div> <div class="svelte-s68cg2"> </div> <div class="svelte-s68cg2"> </div> <div class="svelte-s68cg2"> </div> <div class="svelte-s68cg2"><!></div>',1),T=d('<div class="content grid svelte-s68cg2"><div class="innerColumnHeader svelte-s68cg2"><!></div> <div class="innerColumnHeader svelte-s68cg2"><!></div> <div class="innerColumnHeader svelte-s68cg2"><!></div> <div class="innerColumnHeader svelte-s68cg2"><!></div> <div class="innerColumnHeader svelte-s68cg2"><!></div> <div class="innerColumnHeader svelte-s68cg2"><!></div> <div class="innerColumnHeader svelte-s68cg2"><!></div> <div class="innerColumnHeader svelte-s68cg2"><!></div> <div class="innerColumnHeader svelte-s68cg2"><!></div> <div class="innerColumnHeader svelte-s68cg2"><!></div> <!></div>'),z=d('<div class="content svelte-s68cg2"> </div>'),I=d(" <br/>",1),J=d('<div class="content svelte-s68cg2"></div>')
function K(s,d){e(d,!0)
let j=a(d,"visible",15,!0),x=i(l([])),K=i(l([])),M=-1,Q=""
function U(s){G("Relic List",s)}function W(s){t(K,s.concat(m(K)),!0)}const X=(s,e)=>s?.attributes?.find((s=>e=>e.id===s)(e)),Y=(s,e)=>X(s,e)?.value??"",q=s=>X(s,6),B=(s,e)=>M*(s.time-e.time),V=(s,e)=>X(s,e)?.value??0,Z=s=>(e,a)=>M*(V(e,s)-V(a,s)),ss=(s,e)=>M*R(s.guild?.name??"",e.guild?.name??""),es=(s,e)=>M*R(s.name,e.name),as=s=>s.location.realm.min_level,is=(s,e)=>M*(as(s)-as(e))
function ls(s,e){M=Q===s?-1*M:1,t(x,m(x).slice().sort(e),!0),Q=s}function ts(s,e){U(s),ls(s,e)}async function cs(s=0,e=100){W([`offset ${s}`])
const a=await A(null,s,e)
if(a?.s)return a.r.remaining_relics?a.r.relics.concat(await cs(s+a.r.relics.length,Math.min(100,a.r.remaining_relics))):a.r.relics}async function ns(){W(["Loading..."])
const s=await cs()
H(s)&&(t(x,s.filter(q),!0),ls("sort by level",is))}let vs=i(l(Promise.resolve()))
t(vs,ns(),!0)
{const e=s=>{var e=b("Relic List")
$(s,e)}
c(s,{close:function(){U("close"),j(!1)},get visible(){return j()},title:e,children:(s,e)=>{var a=n(),i=v(a)
r(i,()=>m(vs),s=>{var e=J()
k(e,21,()=>m(K),y,(s,e)=>{var a=I(),i=v(a)
o(()=>u(i,`${m(e)??""} `)),$(s,a)}),$(s,e)},s=>{var e=T(),a=g(e),i=g(a)
f(i,{onclick:()=>{ts("sort by level",is)},children:(s,e)=>{var a=b("Level")
$(s,a)},$$slots:{default:!0}})
var l=h(a,2),t=g(l)
f(t,{onclick:()=>{ts("sort by name",es)},children:(s,e)=>{var a=b("Name")
$(s,a)},$$slots:{default:!0}})
var c=h(l,2),n=g(c)
f(n,{onclick:()=>{ts("sort by guild",ss)},children:(s,e)=>{var a=b("Guild")
$(s,a)},$$slots:{default:!0}})
var r=h(c,2),d=g(r)
f(d,{onclick:()=>{ts("sort by stam gain",Z(6))},children:(s,e)=>{var a=b("Stam Gain")
$(s,a)},$$slots:{default:!0}})
var y=h(r,2),C=g(y)
f(C,{onclick:()=>{ts("sort by attack",Z(0))},children:(s,e)=>{var a=b("Atk")
$(s,a)},$$slots:{default:!0}})
var H=h(y,2),G=g(H)
f(G,{onclick:()=>{ts("sort by damage",Z(4))},children:(s,e)=>{var a=b("Dmg")
$(s,a)},$$slots:{default:!0}})
var R=h(H,2),j=g(R)
f(j,{onclick:()=>{ts("sort by stamina",Z(5))},children:(s,e)=>{var a=b("Stam")
$(s,a)},$$slots:{default:!0}})
var A=h(R,2),z=g(A)
f(z,{onclick:()=>{ts("sort by gold gain",Z(7))},children:(s,e)=>{var a=b("Gold Gain")
$(s,a)},$$slots:{default:!0}})
var I=h(A,2),J=g(I)
f(J,{onclick:()=>{ts("sort by xp gain",Z(8))},children:(s,e)=>{var a=b("XP Gain")
$(s,a)},$$slots:{default:!0}})
var K=h(I,2),M=g(K)
f(M,{onclick:()=>{ts("sort by time",B)},children:(s,e)=>{var a=b("Time")
$(s,a)},$$slots:{default:!0}})
var Q=h(K,2)
k(Q,17,()=>m(x),s=>s.id,(s,e)=>{var a=P(),i=v(a),l=g(i),t=h(i,2),c=g(t)
c.__click=[D,U]
var n=g(c),r=h(t,2),d=g(r),f=s=>{var a=O()
a.__click=[E,U]
var i=g(a)
o(()=>{p(a,"href",`${L??""}${m(e).guild.id??""}`),u(i,m(e).guild.name)}),$(s,a)}
_(d,s=>{m(e).guild&&s(f)})
var k=h(r,2),y=g(k),C=h(k,2),H=g(C),G=h(C,2),R=g(G),j=h(G,2),x=g(j),A=h(j,2),T=g(A),z=h(A,2),I=g(z),J=h(z,2),K=g(J),M=s=>{var a=b()
o(s=>u(a,s),[()=>function(s){const[e,a,i,l]=F(s)
return`${e}d ${N(a)}h ${N(i)}m ${N(l)}s`}(m(e).time)]),$(s,a)}
_(K,s=>{m(e).time&&s(M)}),o((s,a,i,t,v,r)=>{u(l,m(e).location.realm.min_level),p(c,"href",`${w??""}relics${S}view&relic_id=${m(e).id??""}`),u(n,m(e).name),u(y,s),u(H,a),u(R,i),u(x,t),u(T,v),u(I,r)},[()=>Y(m(e),6),()=>Y(m(e),0),()=>Y(m(e),4),()=>Y(m(e),5),()=>Y(m(e),7),()=>Y(m(e),8)]),$(s,a)}),$(s,e)},(s,e)=>{var a=z(),i=g(a)
o(()=>u(i,m(e).message)),$(s,a)}),$(s,a)},$$slots:{title:!0,default:!0}})}C()}s(["click"])
const M=l({visible:!0})
let Q=0
function U(){j("betaOptIn")&&(Q?M.visible=!0:Q=x(K,{props:M,target:document.body}))}export{U as default}
//# sourceMappingURL=mountReliclist.svelte-mh-7LUwU.js.map
