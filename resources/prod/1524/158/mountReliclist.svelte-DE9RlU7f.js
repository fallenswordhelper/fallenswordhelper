import{ao as s,x as e,y as a,aj as i,ak as l,I as c,dR as t,aF as n,D as v,aE as r,B as d,P as o,Q as u,J as m,E as g,L as $,bQ as f,bC as b,C as h,F as k,bP as y,N as C,ac as H,s as _,G as p,S as G,b9 as w,ba as L,bE as S,c0 as P,e0 as j,bL as x,az as E,n as F}from"./calfSystem-CIuUjh4H.js"
import{r as R}from"./reliclist-BNMxC0FH.js"
var D=(s,e)=>e("view relic on UFSG"),I=(s,e)=>e("view guild"),N=d("<a> </a>"),Q=d('<div class="svelte-s68cg2"> </div> <div class="svelte-s68cg2"><a> </a></div> <div class="svelte-s68cg2"><!></div> <div class="svelte-s68cg2"> </div> <div class="svelte-s68cg2"> </div> <div class="svelte-s68cg2"> </div> <div class="svelte-s68cg2"> </div> <div class="svelte-s68cg2"> </div> <div class="svelte-s68cg2"> </div> <div class="svelte-s68cg2"><!></div>',1),X=d('<div class="content grid svelte-s68cg2"><div class="innerColumnHeader svelte-s68cg2"><!></div> <div class="innerColumnHeader svelte-s68cg2"><!></div> <div class="innerColumnHeader svelte-s68cg2"><!></div> <div class="innerColumnHeader svelte-s68cg2"><!></div> <div class="innerColumnHeader svelte-s68cg2"><!></div> <div class="innerColumnHeader svelte-s68cg2"><!></div> <div class="innerColumnHeader svelte-s68cg2"><!></div> <div class="innerColumnHeader svelte-s68cg2"><!></div> <div class="innerColumnHeader svelte-s68cg2"><!></div> <div class="innerColumnHeader svelte-s68cg2"><!></div> <!></div>'),z=d('<div class="content svelte-s68cg2"> </div>'),A=d(" <br/>",1),B=d('<div class="content svelte-s68cg2"></div>')
function J(s,d){e(d,!0)
let E=a(d,"visible",15,!0),F=i(l([])),J=i(l([])),M=-1,O=""
function T(s){_("Relic List",s)}function U(s){c(J,s.concat(m(J)),!0)}const q=(s,e)=>s?.attributes?.find((s=>e=>e.id===s)(e)),K=(s,e)=>q(s,e)?.value??"",V=s=>q(s,6),W=(s,e)=>M*(s.time-e.time),Y=(s,e)=>q(s,e)?.value??0,Z=s=>(e,a)=>M*(Y(e,s)-Y(a,s)),ss=(s,e)=>M*P(s.guild?.name??"",e.guild?.name??""),es=(s,e)=>M*P(s.name,e.name),as=s=>s.location.realm.min_level,is=(s,e)=>M*(as(s)-as(e))
function ls(s,e){M=O===s?-1*M:1,c(F,m(F).slice().sort(e),!0),O=s}function cs(s,e){T(s),ls(s,e)}async function ts(s=0,e=100){U([`offset ${s}`])
const a=await R(null,s,e)
if(a?.s)return a.r.remaining_relics?a.r.relics.concat(await ts(s+a.r.relics.length,Math.min(100,a.r.remaining_relics))):a.r.relics}async function ns(){U(["Loading..."])
const s=await ts()
H(s)&&(c(F,s.filter(V),!0),ls("sort by level",is))}let vs=i(l(Promise.resolve()))
c(vs,ns(),!0)
{const e=s=>{var e=b("Relic List")
$(s,e)}
t(s,{close:function(){T("close"),E(!1)},get visible(){return E()},title:e,children:(s,e)=>{var a=n(),i=v(a)
r(i,()=>m(vs),s=>{var e=B()
k(e,21,()=>m(J),y,(s,e)=>{var a=A(),i=v(a)
o(()=>u(i,`${m(e)??""} `)),$(s,a)}),$(s,e)},s=>{var e=X(),a=g(e),i=g(a)
f(i,{onclick:()=>{cs("sort by level",is)},children:(s,e)=>{var a=b("Level")
$(s,a)},$$slots:{default:!0}})
var l=h(a,2),c=g(l)
f(c,{onclick:()=>{cs("sort by name",es)},children:(s,e)=>{var a=b("Name")
$(s,a)},$$slots:{default:!0}})
var t=h(l,2),n=g(t)
f(n,{onclick:()=>{cs("sort by guild",ss)},children:(s,e)=>{var a=b("Guild")
$(s,a)},$$slots:{default:!0}})
var r=h(t,2),d=g(r)
f(d,{onclick:()=>{cs("sort by stam gain",Z(6))},children:(s,e)=>{var a=b("Stam Gain")
$(s,a)},$$slots:{default:!0}})
var y=h(r,2),C=g(y)
f(C,{onclick:()=>{cs("sort by attack",Z(0))},children:(s,e)=>{var a=b("Atk")
$(s,a)},$$slots:{default:!0}})
var H=h(y,2),_=g(H)
f(_,{onclick:()=>{cs("sort by damage",Z(4))},children:(s,e)=>{var a=b("Dmg")
$(s,a)},$$slots:{default:!0}})
var P=h(H,2),E=g(P)
f(E,{onclick:()=>{cs("sort by stamina",Z(5))},children:(s,e)=>{var a=b("Stam")
$(s,a)},$$slots:{default:!0}})
var R=h(P,2),z=g(R)
f(z,{onclick:()=>{cs("sort by gold gain",Z(7))},children:(s,e)=>{var a=b("Gold Gain")
$(s,a)},$$slots:{default:!0}})
var A=h(R,2),B=g(A)
f(B,{onclick:()=>{cs("sort by xp gain",Z(8))},children:(s,e)=>{var a=b("XP Gain")
$(s,a)},$$slots:{default:!0}})
var J=h(A,2),M=g(J)
f(M,{onclick:()=>{cs("sort by time",W)},children:(s,e)=>{var a=b("Time")
$(s,a)},$$slots:{default:!0}})
var O=h(J,2)
k(O,17,()=>m(F),s=>s.id,(s,e)=>{var a=Q(),i=v(a),l=g(i),c=h(i,2),t=g(c)
t.__click=[D,T]
var n=g(t),r=h(c,2),d=g(r),f=s=>{var a=N()
a.__click=[I,T]
var i=g(a)
o(()=>{G(a,"href",`${S??""}${m(e).guild.id??""}`),u(i,m(e).guild.name)}),$(s,a)}
p(d,s=>{m(e).guild&&s(f)})
var k=h(r,2),y=g(k),C=h(k,2),H=g(C),_=h(C,2),P=g(_),E=h(_,2),F=g(E),R=h(E,2),X=g(R),z=h(R,2),A=g(z),B=h(z,2),J=g(B),M=s=>{var a=b()
o(s=>u(a,s),[()=>function(s){const[e,a,i,l]=j(s)
return`${e}d ${x(a)}h ${x(i)}m ${x(l)}s`}(m(e).time)]),$(s,a)}
p(J,s=>{m(e).time&&s(M)}),o((s,a,i,c,v,r)=>{u(l,m(e).location.realm.min_level),G(t,"href",`${w??""}relics${L}view&relic_id=${m(e).id??""}`),u(n,m(e).name),u(y,s),u(H,a),u(P,i),u(F,c),u(X,v),u(A,r)},[()=>K(m(e),6),()=>K(m(e),0),()=>K(m(e),4),()=>K(m(e),5),()=>K(m(e),7),()=>K(m(e),8)]),$(s,a)}),$(s,e)},(s,e)=>{var a=z(),i=g(a)
o(()=>u(i,m(e).message)),$(s,a)}),$(s,a)},$$slots:{title:!0,default:!0}})}C()}s(["click"])
const M=l({visible:!0})
let O=0
function T(){E("betaOptIn")&&(O?M.visible=!0:O=F(J,{props:M,target:document.body}))}export{T as default}
//# sourceMappingURL=mountReliclist.svelte-DE9RlU7f.js.map
