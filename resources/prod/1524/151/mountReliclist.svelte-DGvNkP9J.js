import{aq as i,z as e,A as l,al as s,am as a,J as t,e5 as n,aG as v,E as r,aF as c,C as d,Q as o,R as m,K as u,F as f,N as $,bQ as p,bC as b,D as g,G as h,bP as k,O as y,ae as C,s as H,H as _,T as G,bi as w,bh as L,bE as S,c0 as F,ef as P,bL as R,aB as j,u as x}from"./calfSystem-C1X5YxJZ.js"
import{r as A}from"./reliclist-jnQGh_27.js"
var D=(i,e)=>e("view relic on UFSG"),E=(i,e)=>e("view guild"),N=d("<a> </a>"),O=d('<div class="svelte-19l2imp"> </div> <div class="svelte-19l2imp"><a> </a></div> <div class="svelte-19l2imp"><!></div> <div class="svelte-19l2imp"> </div> <div class="svelte-19l2imp"> </div> <div class="svelte-19l2imp"> </div> <div class="svelte-19l2imp"> </div> <div class="svelte-19l2imp"> </div> <div class="svelte-19l2imp"> </div> <div class="svelte-19l2imp"><!></div>',1),Q=d('<div class="content grid svelte-19l2imp"><div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <!></div>'),T=d('<div class="content svelte-19l2imp"> </div>'),U=d(" <br/>",1),q=d('<div class="content svelte-19l2imp"></div>')
function z(i,d){e(d,!0)
let j=l(d,"visible",15,!0),x=s(a([])),z=s(a([])),B=-1,I=""
function J(i){H("Relic List",i)}function K(i){t(z,i.concat(u(z)),!0)}const M=(i,e)=>i?.attributes?.find((i=>e=>e.id===i)(e)),X=(i,e)=>M(i,e)?.value??"",V=i=>M(i,6),W=(i,e)=>B*(i.time-e.time),Y=(i,e)=>M(i,e)?.value??0,Z=i=>(e,l)=>B*(Y(e,i)-Y(l,i)),ii=(i,e)=>B*F(i.guild?.name??"",e.guild?.name??""),ei=(i,e)=>B*F(i.name,e.name),li=i=>i.location.realm.min_level,si=(i,e)=>B*(li(i)-li(e))
function ai(i,e){B=I===i?-1*B:1,t(x,u(x).slice().sort(e),!0),I=i}function ti(i,e){J(i),ai(i,e)}async function ni(i=0,e=100){K([`offset ${i}`])
const l=await A(null,i,e)
if(l?.s)return l.r.remaining_relics?l.r.relics.concat(await ni(i+l.r.relics.length,Math.min(100,l.r.remaining_relics))):l.r.relics}async function vi(){K(["Loading..."])
const i=await ni()
C(i)&&(t(x,i.filter(V),!0),ai("sort by level",si))}let ri=s(a(Promise.resolve()))
t(ri,vi(),!0)
{const e=i=>{var e=b("Relic List")
$(i,e)}
n(i,{close:function(){J("close"),j(!1)},get visible(){return j()},title:e,children:(i,e)=>{var l=v(),s=r(l)
c(s,(()=>u(ri)),(i=>{var e=q()
h(e,21,(()=>u(z)),k,((i,e)=>{var l=U(),s=r(l)
o((()=>m(s,`${u(e)??""} `))),$(i,l)})),$(i,e)}),(i=>{var e=Q(),l=f(e),s=f(l)
p(s,{onclick:()=>{ti("sort by level",si)},children:(i,e)=>{var l=b("Level")
$(i,l)},$$slots:{default:!0}})
var a=g(l,2),t=f(a)
p(t,{onclick:()=>{ti("sort by name",ei)},children:(i,e)=>{var l=b("Name")
$(i,l)},$$slots:{default:!0}})
var n=g(a,2),v=f(n)
p(v,{onclick:()=>{ti("sort by guild",ii)},children:(i,e)=>{var l=b("Guild")
$(i,l)},$$slots:{default:!0}})
var c=g(n,2),d=f(c)
p(d,{onclick:()=>{ti("sort by stam gain",Z(6))},children:(i,e)=>{var l=b("Stam Gain")
$(i,l)},$$slots:{default:!0}})
var k=g(c,2),y=f(k)
p(y,{onclick:()=>{ti("sort by attack",Z(0))},children:(i,e)=>{var l=b("Atk")
$(i,l)},$$slots:{default:!0}})
var C=g(k,2),H=f(C)
p(H,{onclick:()=>{ti("sort by damage",Z(4))},children:(i,e)=>{var l=b("Dmg")
$(i,l)},$$slots:{default:!0}})
var F=g(C,2),j=f(F)
p(j,{onclick:()=>{ti("sort by stamina",Z(5))},children:(i,e)=>{var l=b("Stam")
$(i,l)},$$slots:{default:!0}})
var A=g(F,2),T=f(A)
p(T,{onclick:()=>{ti("sort by gold gain",Z(7))},children:(i,e)=>{var l=b("Gold Gain")
$(i,l)},$$slots:{default:!0}})
var U=g(A,2),q=f(U)
p(q,{onclick:()=>{ti("sort by xp gain",Z(8))},children:(i,e)=>{var l=b("XP Gain")
$(i,l)},$$slots:{default:!0}})
var z=g(U,2),B=f(z)
p(B,{onclick:()=>{ti("sort by time",W)},children:(i,e)=>{var l=b("Time")
$(i,l)},$$slots:{default:!0}})
var I=g(z,2)
h(I,17,(()=>u(x)),(i=>i.id),((i,e)=>{var l=O(),s=r(l),a=f(s),t=g(s,2),n=f(t)
n.__click=[D,J]
var v=f(n),c=g(t,2),d=f(c),p=i=>{var l=N()
l.__click=[E,J]
var s=f(l)
o((()=>{G(l,"href",`${S??""}${u(e).guild.id??""}`),m(s,u(e).guild.name)})),$(i,l)}
_(d,(i=>{u(e).guild&&i(p)}))
var h=g(c,2),k=f(h),y=g(h,2),C=f(y),H=g(y,2),F=f(H),j=g(H,2),x=f(j),A=g(j,2),Q=f(A),T=g(A,2),U=f(T),q=g(T,2),z=f(q),B=i=>{var l=b()
o((i=>m(l,i)),[()=>function(i){const[e,l,s,a]=P(i)
return`${e}d ${R(l)}h ${R(s)}m ${R(a)}s`}(u(e).time)]),$(i,l)}
_(z,(i=>{u(e).time&&i(B)})),o(((i,l,s,t,r,c)=>{m(a,u(e).location.realm.min_level),G(n,"href",`${w??""}relics${L}view&relic_id=${u(e).id??""}`),m(v,u(e).name),m(k,i),m(C,l),m(F,s),m(x,t),m(Q,r),m(U,c)}),[()=>X(u(e),6),()=>X(u(e),0),()=>X(u(e),4),()=>X(u(e),5),()=>X(u(e),7),()=>X(u(e),8)]),$(i,l)})),$(i,e)}),((i,e)=>{var l=T(),s=f(l)
o((()=>m(s,u(e).message))),$(i,l)})),$(i,l)},$$slots:{title:!0,default:!0}})}y()}i(["click"])
const B=a({visible:!0})
let I=0
function J(){j("betaOptIn")&&(I?B.visible=!0:I=x(z,{props:B,target:document.body}))}export{J as default}
//# sourceMappingURL=mountReliclist.svelte-DGvNkP9J.js.map
