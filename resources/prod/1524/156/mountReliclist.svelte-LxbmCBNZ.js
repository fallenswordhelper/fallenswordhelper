import{ap as i,x as l,y as e,ak as s,al as a,I as t,dX as n,aF as v,D as r,aE as c,B as d,P as o,Q as m,J as u,E as $,L as f,bP as p,bB as b,C as g,F as h,bO as k,N as y,ad as C,s as H,G as _,S as G,bh as w,bg as S,bD as L,b$ as P,e6 as x,bK as D,aA as F,n as j}from"./calfSystem-79LsojAC.js"
import{r as A}from"./reliclist-DSDwQYJH.js"
var B=(i,l)=>l("view relic on UFSG"),E=(i,l)=>l("view guild"),I=d("<a> </a>"),N=d('<div class="svelte-19l2imp"> </div> <div class="svelte-19l2imp"><a> </a></div> <div class="svelte-19l2imp"><!></div> <div class="svelte-19l2imp"> </div> <div class="svelte-19l2imp"> </div> <div class="svelte-19l2imp"> </div> <div class="svelte-19l2imp"> </div> <div class="svelte-19l2imp"> </div> <div class="svelte-19l2imp"> </div> <div class="svelte-19l2imp"><!></div>',1),O=d('<div class="content grid svelte-19l2imp"><div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <!></div>'),R=d('<div class="content svelte-19l2imp"> </div>'),X=d(" <br/>",1),J=d('<div class="content svelte-19l2imp"></div>')
function K(i,d){l(d,!0)
let F=e(d,"visible",15,!0),j=s(a([])),K=s(a([])),M=-1,Q=""
function T(i){H("Relic List",i)}function U(i){t(K,i.concat(u(K)),!0)}const q=(i,l)=>i?.attributes?.find((i=>l=>l.id===i)(l)),z=(i,l)=>q(i,l)?.value??"",V=i=>q(i,6),W=(i,l)=>M*(i.time-l.time),Y=(i,l)=>q(i,l)?.value??0,Z=i=>(l,e)=>M*(Y(l,i)-Y(e,i)),ii=(i,l)=>M*P(i.guild?.name??"",l.guild?.name??""),li=(i,l)=>M*P(i.name,l.name),ei=i=>i.location.realm.min_level,si=(i,l)=>M*(ei(i)-ei(l))
function ai(i,l){M=Q===i?-1*M:1,t(j,u(j).slice().sort(l),!0),Q=i}function ti(i,l){T(i),ai(i,l)}async function ni(i=0,l=100){U([`offset ${i}`])
const e=await A(null,i,l)
if(e?.s)return e.r.remaining_relics?e.r.relics.concat(await ni(i+e.r.relics.length,Math.min(100,e.r.remaining_relics))):e.r.relics}async function vi(){U(["Loading..."])
const i=await ni()
C(i)&&(t(j,i.filter(V),!0),ai("sort by level",si))}let ri=s(a(Promise.resolve()))
t(ri,vi(),!0)
{const l=i=>{var l=b("Relic List")
f(i,l)}
n(i,{close:function(){T("close"),F(!1)},get visible(){return F()},title:l,children:(i,l)=>{var e=v(),s=r(e)
c(s,()=>u(ri),i=>{var l=J()
h(l,21,()=>u(K),k,(i,l)=>{var e=X(),s=r(e)
o(()=>m(s,`${u(l)??""} `)),f(i,e)}),f(i,l)},i=>{var l=O(),e=$(l),s=$(e)
p(s,{onclick:()=>{ti("sort by level",si)},children:(i,l)=>{var e=b("Level")
f(i,e)},$$slots:{default:!0}})
var a=g(e,2),t=$(a)
p(t,{onclick:()=>{ti("sort by name",li)},children:(i,l)=>{var e=b("Name")
f(i,e)},$$slots:{default:!0}})
var n=g(a,2),v=$(n)
p(v,{onclick:()=>{ti("sort by guild",ii)},children:(i,l)=>{var e=b("Guild")
f(i,e)},$$slots:{default:!0}})
var c=g(n,2),d=$(c)
p(d,{onclick:()=>{ti("sort by stam gain",Z(6))},children:(i,l)=>{var e=b("Stam Gain")
f(i,e)},$$slots:{default:!0}})
var k=g(c,2),y=$(k)
p(y,{onclick:()=>{ti("sort by attack",Z(0))},children:(i,l)=>{var e=b("Atk")
f(i,e)},$$slots:{default:!0}})
var C=g(k,2),H=$(C)
p(H,{onclick:()=>{ti("sort by damage",Z(4))},children:(i,l)=>{var e=b("Dmg")
f(i,e)},$$slots:{default:!0}})
var P=g(C,2),F=$(P)
p(F,{onclick:()=>{ti("sort by stamina",Z(5))},children:(i,l)=>{var e=b("Stam")
f(i,e)},$$slots:{default:!0}})
var A=g(P,2),R=$(A)
p(R,{onclick:()=>{ti("sort by gold gain",Z(7))},children:(i,l)=>{var e=b("Gold Gain")
f(i,e)},$$slots:{default:!0}})
var X=g(A,2),J=$(X)
p(J,{onclick:()=>{ti("sort by xp gain",Z(8))},children:(i,l)=>{var e=b("XP Gain")
f(i,e)},$$slots:{default:!0}})
var K=g(X,2),M=$(K)
p(M,{onclick:()=>{ti("sort by time",W)},children:(i,l)=>{var e=b("Time")
f(i,e)},$$slots:{default:!0}})
var Q=g(K,2)
h(Q,17,()=>u(j),i=>i.id,(i,l)=>{var e=N(),s=r(e),a=$(s),t=g(s,2),n=$(t)
n.__click=[B,T]
var v=$(n),c=g(t,2),d=$(c),p=i=>{var e=I()
e.__click=[E,T]
var s=$(e)
o(()=>{G(e,"href",`${L??""}${u(l).guild.id??""}`),m(s,u(l).guild.name)}),f(i,e)}
_(d,i=>{u(l).guild&&i(p)})
var h=g(c,2),k=$(h),y=g(h,2),C=$(y),H=g(y,2),P=$(H),F=g(H,2),j=$(F),A=g(F,2),O=$(A),R=g(A,2),X=$(R),J=g(R,2),K=$(J),M=i=>{var e=b()
o(i=>m(e,i),[()=>function(i){const[l,e,s,a]=x(i)
return`${l}d ${D(e)}h ${D(s)}m ${D(a)}s`}(u(l).time)]),f(i,e)}
_(K,i=>{u(l).time&&i(M)}),o((i,e,s,t,r,c)=>{m(a,u(l).location.realm.min_level),G(n,"href",`${w??""}relics${S}view&relic_id=${u(l).id??""}`),m(v,u(l).name),m(k,i),m(C,e),m(P,s),m(j,t),m(O,r),m(X,c)},[()=>z(u(l),6),()=>z(u(l),0),()=>z(u(l),4),()=>z(u(l),5),()=>z(u(l),7),()=>z(u(l),8)]),f(i,e)}),f(i,l)},(i,l)=>{var e=R(),s=$(e)
o(()=>m(s,u(l).message)),f(i,e)}),f(i,e)},$$slots:{title:!0,default:!0}})}y()}i(["click"])
const M=a({visible:!0})
let Q=0
function T(){F("betaOptIn")&&(Q?M.visible=!0:Q=j(K,{props:M,target:document.body}))}export{T as default}
//# sourceMappingURL=mountReliclist.svelte-LxbmCBNZ.js.map
