import{ao as i,x as e,y as l,aj as s,ak as a,H as t,e0 as n,aE as v,C as r,aD as c,A as d,O as o,P as m,I as u,D as f,K as $,bO as p,bA as b,B as g,E as h,bN as k,L as y,ac as C,s as H,F as _,R as w,bg as G,bf as L,bC as S,b_ as j,ea as x,bJ as A,az as D,n as O}from"./calfSystem-UyQ_FKFu.js"
import{r as P}from"./reliclist-DXsP1Yis.js"
var R=(i,e)=>e("view relic on UFSG"),E=(i,e)=>e("view guild"),F=d("<a> </a>"),I=d('<div class="svelte-19l2imp"> </div> <div class="svelte-19l2imp"><a> </a></div> <div class="svelte-19l2imp"><!></div> <div class="svelte-19l2imp"> </div> <div class="svelte-19l2imp"> </div> <div class="svelte-19l2imp"> </div> <div class="svelte-19l2imp"> </div> <div class="svelte-19l2imp"> </div> <div class="svelte-19l2imp"> </div> <div class="svelte-19l2imp"><!></div>',1),N=d('<div class="content grid svelte-19l2imp"><div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <!></div>'),z=d('<div class="content svelte-19l2imp"> </div>'),B=d(" <br/>",1),J=d('<div class="content svelte-19l2imp"></div>')
function K(i,d){e(d,!0)
let D=l(d,"visible",15,!0),O=s(a([])),K=s(a([])),M=-1,T=""
function U(i){H("Relic List",i)}function W(i){t(K,i.concat(u(K)),!0)}const X=(i,e)=>i?.attributes?.find((i=>e=>e.id===i)(e)),q=(i,e)=>X(i,e)?.value??"",Q=i=>X(i,6),V=(i,e)=>M*(i.time-e.time),Y=(i,e)=>X(i,e)?.value??0,Z=i=>(e,l)=>M*(Y(e,i)-Y(l,i)),ii=(i,e)=>M*j(i.guild?.name??"",e.guild?.name??""),ei=(i,e)=>M*j(i.name,e.name),li=i=>i.location.realm.min_level,si=(i,e)=>M*(li(i)-li(e))
function ai(i,e){M=T===i?-1*M:1,t(O,u(O).slice().sort(e),!0),T=i}function ti(i,e){U(i),ai(i,e)}async function ni(i=0,e=100){W([`offset ${i}`])
const l=await P(null,i,e)
if(l?.s)return l.r.remaining_relics?l.r.relics.concat(await ni(i+l.r.relics.length,Math.min(100,l.r.remaining_relics))):l.r.relics}async function vi(){W(["Loading..."])
const i=await ni()
C(i)&&(t(O,i.filter(Q),!0),ai("sort by level",si))}let ri=s(a(Promise.resolve()))
t(ri,vi(),!0)
{const e=i=>{var e=b("Relic List")
$(i,e)}
n(i,{close:function(){U("close"),D(!1)},get visible(){return D()},title:e,children:(i,e)=>{var l=v(),s=r(l)
c(s,()=>u(ri),i=>{var e=J()
h(e,21,()=>u(K),k,(i,e)=>{var l=B(),s=r(l)
o(()=>m(s,`${u(e)??""} `)),$(i,l)}),$(i,e)},i=>{var e=N(),l=f(e),s=f(l)
p(s,{onclick:()=>{ti("sort by level",si)},children:(i,e)=>{var l=b("Level")
$(i,l)},$$slots:{default:!0}})
var a=g(l,2),t=f(a)
p(t,{onclick:()=>{ti("sort by name",ei)},children:(i,e)=>{var l=b("Name")
$(i,l)},$$slots:{default:!0}})
var n=g(a,2),v=f(n)
p(v,{onclick:()=>{ti("sort by guild",ii)},children:(i,e)=>{var l=b("Guild")
$(i,l)},$$slots:{default:!0}})
var c=g(n,2),d=f(c)
p(d,{onclick:()=>{ti("sort by stam gain",Z(6))},children:(i,e)=>{var l=b("Stam Gain")
$(i,l)},$$slots:{default:!0}})
var k=g(c,2),y=f(k)
p(y,{onclick:()=>{ti("sort by attack",Z(0))},children:(i,e)=>{var l=b("Atk")
$(i,l)},$$slots:{default:!0}})
var C=g(k,2),H=f(C)
p(H,{onclick:()=>{ti("sort by damage",Z(4))},children:(i,e)=>{var l=b("Dmg")
$(i,l)},$$slots:{default:!0}})
var j=g(C,2),D=f(j)
p(D,{onclick:()=>{ti("sort by stamina",Z(5))},children:(i,e)=>{var l=b("Stam")
$(i,l)},$$slots:{default:!0}})
var P=g(j,2),z=f(P)
p(z,{onclick:()=>{ti("sort by gold gain",Z(7))},children:(i,e)=>{var l=b("Gold Gain")
$(i,l)},$$slots:{default:!0}})
var B=g(P,2),J=f(B)
p(J,{onclick:()=>{ti("sort by xp gain",Z(8))},children:(i,e)=>{var l=b("XP Gain")
$(i,l)},$$slots:{default:!0}})
var K=g(B,2),M=f(K)
p(M,{onclick:()=>{ti("sort by time",V)},children:(i,e)=>{var l=b("Time")
$(i,l)},$$slots:{default:!0}})
var T=g(K,2)
h(T,17,()=>u(O),i=>i.id,(i,e)=>{var l=I(),s=r(l),a=f(s),t=g(s,2),n=f(t)
n.__click=[R,U]
var v=f(n),c=g(t,2),d=f(c),p=i=>{var l=F()
l.__click=[E,U]
var s=f(l)
o(()=>{w(l,"href",`${S??""}${u(e).guild.id??""}`),m(s,u(e).guild.name)}),$(i,l)}
_(d,i=>{u(e).guild&&i(p)})
var h=g(c,2),k=f(h),y=g(h,2),C=f(y),H=g(y,2),j=f(H),D=g(H,2),O=f(D),P=g(D,2),N=f(P),z=g(P,2),B=f(z),J=g(z,2),K=f(J),M=i=>{var l=b()
o(i=>m(l,i),[()=>function(i){const[e,l,s,a]=x(i)
return`${e}d ${A(l)}h ${A(s)}m ${A(a)}s`}(u(e).time)]),$(i,l)}
_(K,i=>{u(e).time&&i(M)}),o((i,l,s,t,r,c)=>{m(a,u(e).location.realm.min_level),w(n,"href",`${G??""}relics${L}view&relic_id=${u(e).id??""}`),m(v,u(e).name),m(k,i),m(C,l),m(j,s),m(O,t),m(N,r),m(B,c)},[()=>q(u(e),6),()=>q(u(e),0),()=>q(u(e),4),()=>q(u(e),5),()=>q(u(e),7),()=>q(u(e),8)]),$(i,l)}),$(i,e)},(i,e)=>{var l=z(),s=f(l)
o(()=>m(s,u(e).message)),$(i,l)}),$(i,l)},$$slots:{title:!0,default:!0}})}y()}i(["click"])
const M=a({visible:!0})
let T=0
function U(){D("betaOptIn")&&(T?M.visible=!0:T=O(K,{props:M,target:document.body}))}export{U as default}
//# sourceMappingURL=mountReliclist.svelte-0sHYk7Df.js.map
