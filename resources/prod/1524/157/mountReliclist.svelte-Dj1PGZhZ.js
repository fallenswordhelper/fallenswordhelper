import{ap as i,x as l,y as e,ak as s,al as a,I as t,dY as n,aG as v,D as r,aF as c,B as d,P as o,Q as m,J as u,E as $,L as f,bR as p,bD as b,C as g,F as h,bQ as k,N as y,ad as C,s as H,G as _,S as G,ba as w,bb as L,bF as S,c1 as F,e7 as x,bM as D,aA as P,n as R}from"./calfSystem-CQOGdqPv.js"
import{r as j}from"./reliclist-B7l169y3.js"
var A=(i,l)=>l("view relic on UFSG"),I=(i,l)=>l("view guild"),M=d("<a> </a>"),N=d('<div class="svelte-19l2imp"> </div> <div class="svelte-19l2imp"><a> </a></div> <div class="svelte-19l2imp"><!></div> <div class="svelte-19l2imp"> </div> <div class="svelte-19l2imp"> </div> <div class="svelte-19l2imp"> </div> <div class="svelte-19l2imp"> </div> <div class="svelte-19l2imp"> </div> <div class="svelte-19l2imp"> </div> <div class="svelte-19l2imp"><!></div>',1),Q=d('<div class="content grid svelte-19l2imp"><div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <div class="innerColumnHeader svelte-19l2imp"><!></div> <!></div>'),B=d('<div class="content svelte-19l2imp"> </div>'),E=d(" <br/>",1),J=d('<div class="content svelte-19l2imp"></div>')
function O(i,d){l(d,!0)
let P=e(d,"visible",15,!0),R=s(a([])),O=s(a([])),T=-1,U=""
function W(i){H("Relic List",i)}function X(i){t(O,i.concat(u(O)),!0)}const Y=(i,l)=>i?.attributes?.find((i=>l=>l.id===i)(l)),q=(i,l)=>Y(i,l)?.value??"",z=i=>Y(i,6),K=(i,l)=>T*(i.time-l.time),V=(i,l)=>Y(i,l)?.value??0,Z=i=>(l,e)=>T*(V(l,i)-V(e,i)),ii=(i,l)=>T*F(i.guild?.name??"",l.guild?.name??""),li=(i,l)=>T*F(i.name,l.name),ei=i=>i.location.realm.min_level,si=(i,l)=>T*(ei(i)-ei(l))
function ai(i,l){T=U===i?-1*T:1,t(R,u(R).slice().sort(l),!0),U=i}function ti(i,l){W(i),ai(i,l)}async function ni(i=0,l=100){X([`offset ${i}`])
const e=await j(null,i,l)
if(e?.s)return e.r.remaining_relics?e.r.relics.concat(await ni(i+e.r.relics.length,Math.min(100,e.r.remaining_relics))):e.r.relics}async function vi(){X(["Loading..."])
const i=await ni()
C(i)&&(t(R,i.filter(z),!0),ai("sort by level",si))}let ri=s(a(Promise.resolve()))
t(ri,vi(),!0)
{const l=i=>{var l=b("Relic List")
f(i,l)}
n(i,{close:function(){W("close"),P(!1)},get visible(){return P()},title:l,children:(i,l)=>{var e=v(),s=r(e)
c(s,()=>u(ri),i=>{var l=J()
h(l,21,()=>u(O),k,(i,l)=>{var e=E(),s=r(e)
o(()=>m(s,`${u(l)??""} `)),f(i,e)}),f(i,l)},i=>{var l=Q(),e=$(l),s=$(e)
p(s,{onclick:()=>{ti("sort by level",si)},children:(i,l)=>{var e=b("Level")
f(i,e)},$$slots:{default:!0}})
var a=g(e,2),t=$(a)
p(t,{onclick:()=>{ti("sort by name",li)},children:(i,l)=>{var e=b("Name")
f(i,e)},$$slots:{default:!0}})
var n=g(a,2),v=$(n)
p(v,{onclick:()=>{ti("sort by guild",ii)},children:(i,l)=>{var e=b("Guild")
f(i,e)},$$slots:{default:!0}})
var c=g(n,2),d=$(c)
p(d,{onclick:()=>{ti("sort by stam gain",Z(6))},children:(i,l)=>{var e=b("Stam Gain")
f(i,e)},$$slots:{default:!0}})
var k=g(c,2),y=$(k)
p(y,{onclick:()=>{ti("sort by attack",Z(0))},children:(i,l)=>{var e=b("Atk")
f(i,e)},$$slots:{default:!0}})
var C=g(k,2),H=$(C)
p(H,{onclick:()=>{ti("sort by damage",Z(4))},children:(i,l)=>{var e=b("Dmg")
f(i,e)},$$slots:{default:!0}})
var F=g(C,2),P=$(F)
p(P,{onclick:()=>{ti("sort by stamina",Z(5))},children:(i,l)=>{var e=b("Stam")
f(i,e)},$$slots:{default:!0}})
var j=g(F,2),B=$(j)
p(B,{onclick:()=>{ti("sort by gold gain",Z(7))},children:(i,l)=>{var e=b("Gold Gain")
f(i,e)},$$slots:{default:!0}})
var E=g(j,2),J=$(E)
p(J,{onclick:()=>{ti("sort by xp gain",Z(8))},children:(i,l)=>{var e=b("XP Gain")
f(i,e)},$$slots:{default:!0}})
var O=g(E,2),T=$(O)
p(T,{onclick:()=>{ti("sort by time",K)},children:(i,l)=>{var e=b("Time")
f(i,e)},$$slots:{default:!0}})
var U=g(O,2)
h(U,17,()=>u(R),i=>i.id,(i,l)=>{var e=N(),s=r(e),a=$(s),t=g(s,2),n=$(t)
n.__click=[A,W]
var v=$(n),c=g(t,2),d=$(c),p=i=>{var e=M()
e.__click=[I,W]
var s=$(e)
o(()=>{G(e,"href",`${S??""}${u(l).guild.id??""}`),m(s,u(l).guild.name)}),f(i,e)}
_(d,i=>{u(l).guild&&i(p)})
var h=g(c,2),k=$(h),y=g(h,2),C=$(y),H=g(y,2),F=$(H),P=g(H,2),R=$(P),j=g(P,2),Q=$(j),B=g(j,2),E=$(B),J=g(B,2),O=$(J),T=i=>{var e=b()
o(i=>m(e,i),[()=>function(i){const[l,e,s,a]=x(i)
return`${l}d ${D(e)}h ${D(s)}m ${D(a)}s`}(u(l).time)]),f(i,e)}
_(O,i=>{u(l).time&&i(T)}),o((i,e,s,t,r,c)=>{m(a,u(l).location.realm.min_level),G(n,"href",`${w??""}relics${L}view&relic_id=${u(l).id??""}`),m(v,u(l).name),m(k,i),m(C,e),m(F,s),m(R,t),m(Q,r),m(E,c)},[()=>q(u(l),6),()=>q(u(l),0),()=>q(u(l),4),()=>q(u(l),5),()=>q(u(l),7),()=>q(u(l),8)]),f(i,e)}),f(i,l)},(i,l)=>{var e=B(),s=$(e)
o(()=>m(s,u(l).message)),f(i,e)}),f(i,e)},$$slots:{title:!0,default:!0}})}y()}i(["click"])
const T=a({visible:!0})
let U=0
function W(){P("betaOptIn")&&(U?T.visible=!0:U=R(O,{props:T,target:document.body}))}export{W as default}
//# sourceMappingURL=mountReliclist.svelte-Dj1PGZhZ.js.map
